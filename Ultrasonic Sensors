#include <LiquidCrystal_I2C.h>
#include <LiquidCrystal.h>
#define TRIG_PIN_1 9
#define ECHO_PIN_1 10
#define TRIG_PIN_2 11
#define ECHO_PIN_2 12

LiquidCrystal lcd(1, 2, 4, 5, 6, 7);

unsigned long startTime = 0;
unsigned long endTime = 0;
bool timerRunning = false;



const int trigPin = 9;
const int echoPin = 10;
const int trig2 = 11;
const int echo2 = 12;
//unsigned long startTime = 0;
//unsigned long endTime = 0;
//bool timerRunning = false;
long dis2;
long duration;
long duration2;
int distanceCm, distanceInch;

unsigned long StartTime = 0;
unsigned long elapsedTime = 0;

void StartTimer() {
    StartTime = millis();
}
 void Timet()
{
  lcd.setCursor(0, 1);
  long timeTaken = endTime - startTime;
  int minutes = timeTaken / 60000;
  int seconds = (timeTaken / 1000) % 60;
  lcd.print(minutes);
  lcd.print("m ");
  lcd.print(seconds);
  lcd.print("s");
}
void startTimer()
{
  lcd.clear();
  lcd.print("start");
  startTime = millis();
  timerRunning = true;
}

void stopTimer()
{
  lcd.clear();
  lcd.print("end");
  endTime = millis();
  timerRunning = false;
  Timet();
}
bool sensorTriggered(int trigPin, int echoPin)
{
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  unsigned long duration = pulseIn(echoPin, HIGH);
  float distance = duration * 0.034 / 2; 
  return (distance < 10); 
}

void setup()
{
  lcd.begin(16, 2);
  pinMode(TRIG_PIN_1, OUTPUT);
  pinMode(ECHO_PIN_1, INPUT);
  pinMode(TRIG_PIN_2, OUTPUT);
  pinMode(ECHO_PIN_2, INPUT);
  lcd.print("starting");
}

void loop()
{
  if (!timerRunning){if (sensorTriggered(TRIG_PIN_1, ECHO_PIN_1)){startTimer();}}
  else{if (sensorTriggered(TRIG_PIN_2, ECHO_PIN_2)){stopTimer();}}
}
